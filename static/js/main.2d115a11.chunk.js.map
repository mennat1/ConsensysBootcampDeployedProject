{"version":3,"sources":["getWeb3.js","Navbar.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Navbar","className","this","props","connectedAccount","width","height","src","Identicon","toString","alt","id","Component","Form","componentDidMount","eth","getBalance","eth_balance","utils","fromWei","setState","tokenA_contract","methods","balanceOf","call","tokenA_balance","tokenB_contract","tokenB_balance","swapContract_address","swapTokens_eth_balance","swapTokens_tokenA_balance","swapTokens_tokenB_balance","aggregatorV3InterfaceABI","priceFeed","Contract","decimals","latestRoundData","roundData","answer","eth_price","state","rateA","rateB","selected_token","selected_rate","clicked_button","token_amount","eth_amount","usd_amount","handleChange1","bind","handleChange2","handleChange3","handleSelect","handleSubmit","event","target","value","preventDefault","call_value","toWei","swapTokens_contract","buyTokensA","send","from","buyTokensB","alert","call_amount","approve","sellTokensA","sellTokensB","eth_balance_div","tokenA_balance_div","tokenB_balance_div","swapTokens_eth_balance_div","swapTokens_tokenB_balance_div","swapTokens_tokenA_balance_div","style","display","onSubmit","type","onChange","placeholder","name","disabled","onClick","e","App","getAccounts","accounts","net","getId","networkId","connectedNetworkID","oncorrectNetwork","error","connectWallet","deployedNetwork1","TokenA","networks","instance1","abi","address","deployedNetwork2","TokenB","instance2","deployedNetwork3","SwapTokens","instance3","content","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d115a11.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react'\nimport Identicon from 'identicon.js';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar  navbar-custom fixed-top  flex-md-nowrap py-3 shadow\">\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            \n            { this.props.connectedAccount\n              ? <img\n                className=\"ml-2\"\n                width='50'\n                height='50'\n                src={`data:image/png;base64,${new Identicon(this.props.connectedAccount, 30).toString()}`}\n                alt=\"\"\n              />\n              : <span>CAN NOT FIND ACCOUNT</span>\n            }\n            <small className=\"connectedAccount \">\n              <small id=\"connectedAccount\">Connected Account Address:  {this.props.connectedAccount}</small>\n            </small>\n\n\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\n\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        rateA:100,\n        rateB:200,\n        selected_token:\"A\",\n        selected_rate:100,\n        clicked_button:null,\n        token_amount:\"0\",\n        eth_amount:\"0\",\n        usd_amount:\"0\",\n        \n        \n        eth_balance:null,\n        tokenA_balance:null,\n        tokenB_balance:null,\n        swapTokens_eth_balance:null,\n        swapTokens_tokenA_balance:null,\n        swapTokens_tokenB_balance:null,\n        eth_price:null\n\n    }\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange1(event) { // Change token Amount\n    this.setState({token_amount: event.target.value});\n    this.setState({eth_amount:(( event.target.value)/(this.state.selected_rate))});\n    this.setState({usd_amount:(this.state.eth_price * ( event.target.value)/(this.state.selected_rate))})\n    \n  }\n\n  handleChange2(event) { // Change ETH amount\n    this.setState({eth_amount: event.target.value});\n    this.setState({token_amount:(event.target.value * this.state.selected_rate)});\n    this.setState({usd_amount:(this.state.eth_price * event.target.value)})\n  }\n\n  handleChange3(event) { // Change USD amount\n    this.setState({usd_amount: event.target.value});\n    this.setState({eth_amount:(event.target.value/this.state.eth_price)});\n    this.setState({token_amount:(event.target.value/this.state.eth_price) * this.state.selected_rate});\n  }\n\n  handleSelect(event) { // Change Token\n    console.log(\"Hello from handle Select\");\n    console.log(\"event.target.value = \", event.target.value)\n    this.setState({selected_token: event.target.value});\n    this.setState({token_amount:\"0\"});\n    this.setState({eth_amount:\"0\"});\n    this.setState({usd_amount:\"0\"});\n\n    if((event.target.value) === \"A\"){\n        console.log(\"++++++++\");\n        this.setState({selected_rate:100});\n    }else{\n        console.log(\"---------\");\n        this.setState({selected_rate:200});\n    }\n    console.log(\"selected_token = \", this.state.selected_token);\n    console.log(\"selected_rate = \", this.state.selected_rate);\n    console.log(\"Leaving handleToken func\");\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    // alert(\"Hi!\");\n    // alert(event.target.value);\n    // alert(event.submit.name);\n    // alert(this.state.clicked_button);\n    if(this.state.clicked_button === \"buy\"){\n        let call_value = this.props.web3.utils.toWei((this.state.eth_amount).toString());\n        console.log(\"call_value = \", call_value);\n        if(this.state.selected_token === \"A\"){\n            // console.log(\"eth_amount = \", eth_amount);\n            await this.props.swapTokens_contract.methods.buyTokensA().send({value:call_value, from:this.props.connectedAccount});\n\n            let tokenA_balance = await this.props.tokenA_contract.methods.balanceOf(this.props.connectedAccount).call();\n            console.log(\"Token A Balance after buying tokens= \", this.props.web3.utils.fromWei(tokenA_balance));\n            this.setState({tokenA_balance});\n\n        }else if(this.state.selected_token === \"B\"){\n            await this.props.swapTokens_contract.methods.buyTokensB().send({value:call_value, from:this.props.connectedAccount});\n            let tokenB_balance = await this.props.tokenB_contract.methods.balanceOf(this.props.connectedAccount).call();\n            console.log(\"Token B Balance after buying tokens= \", this.props.web3.utils.fromWei(tokenB_balance));\n            this.setState({tokenB_balance});\n\n        }else{\n            alert(\"ERROR in selected_token\");\n        }\n        \n        \n    }else if(this.state.clicked_button === \"sell\"){\n        let call_amount = this.props.web3.utils.toWei((this.state.token_amount).toString());\n        if(this.state.selected_token === \"A\"){\n            await this.props.tokenA_contract.methods.approve(this.props.swapContract_address, call_amount).send({from:this.props.connectedAccount});\n            await this.props.swapTokens_contract.methods.sellTokensA(call_amount).send({from:this.props.connectedAccount});\n            let tokenA_balance = await this.props.tokenA_contract.methods.balanceOf(this.props.connectedAccount).call();\n            console.log(\"Token A Balance after selling tokens= \", this.props.web3.utils.fromWei(tokenA_balance));\n            this.setState({tokenA_balance});\n\n        }else if(this.state.selected_token === \"B\"){\n            await this.props.tokenB_contract.methods.approve(this.props.swapContract_address, call_amount).send({from:this.props.connectedAccount});\n            await this.props.swapTokens_contract.methods.sellTokensB(call_amount).send({from:this.props.connectedAccount});\n            let tokenB_balance = await this.props.tokenB_contract.methods.balanceOf(this.props.connectedAccount).call();\n            console.log(\"Token A Balance after selling tokens= \", this.props.web3.utils.fromWei(tokenB_balance));\n            this.setState({tokenB_balance});\n        \n        }else{\n            alert(\"ERROR in selected_token\");\n        }\n       \n        \n    }else{\n        alert(\"ERROR in clicked_button\");\n    }\n    let eth_balance = await this.props.web3.eth.getBalance(this.props.connectedAccount);\n    console.log(\"ETH Balance = \", this.props.web3.utils.fromWei(eth_balance));\n    this.setState({eth_balance});\n\n    console.log(\"swapContract_address = \", this.props.swapContract_address);\n    let swapTokens_eth_balance = await this.props.web3.eth.getBalance(this.props.swapContract_address);\n    console.log(\"swapTokens_eth_balance = \", this.props.web3.utils.fromWei(swapTokens_eth_balance));\n    this.setState({swapTokens_eth_balance});\n\n    let swapTokens_tokenA_balance = await this.props.tokenA_contract.methods.balanceOf(this.props.swapContract_address).call();\n    console.log(\"swapTokens_tokenA_balance= \", this.props.web3.utils.fromWei(swapTokens_tokenA_balance));\n    this.setState({swapTokens_tokenA_balance});\n\n    let swapTokens_tokenB_balance = await this.props.tokenB_contract.methods.balanceOf(this.props.swapContract_address).call();\n    console.log(\"swapTokens_tokenB_balance = \", this.props.web3.utils.fromWei(swapTokens_tokenB_balance));\n    this.setState({swapTokens_tokenB_balance});\n  }\n\n\n  componentDidMount = async () => {\n    let eth_balance = await this.props.web3.eth.getBalance(this.props.connectedAccount);\n    console.log(\"ETH Balance = \", this.props.web3.utils.fromWei(eth_balance));\n    this.setState({eth_balance});\n\n    let tokenA_balance = await this.props.tokenA_contract.methods.balanceOf(this.props.connectedAccount).call();\n    console.log(\"Token A Balance = \", this.props.web3.utils.fromWei(tokenA_balance));\n    this.setState({tokenA_balance});\n\n    let tokenB_balance = await this.props.tokenB_contract.methods.balanceOf(this.props.connectedAccount).call();\n    console.log(\"Token A Balance = \", this.props.web3.utils.fromWei(tokenB_balance));\n    this.setState({tokenB_balance});\n\n   \n    console.log(\"swapContract_address = \", this.props.swapContract_address);\n    let swapTokens_eth_balance = await this.props.web3.eth.getBalance(this.props.swapContract_address);\n    console.log(\"swapTokens_eth_balance = \", this.props.web3.utils.fromWei(swapTokens_eth_balance));\n    this.setState({swapTokens_eth_balance});\n\n    let swapTokens_tokenA_balance = await this.props.tokenA_contract.methods.balanceOf(this.props.swapContract_address).call();\n    console.log(\"swapTokens_tokenA_balance= \", this.props.web3.utils.fromWei(swapTokens_tokenA_balance));\n    this.setState({swapTokens_tokenA_balance});\n\n    let swapTokens_tokenB_balance = await this.props.tokenB_contract.methods.balanceOf(this.props.swapContract_address).call();\n    console.log(\"swapTokens_tokenB_balance = \", this.props.web3.utils.fromWei(swapTokens_tokenB_balance));\n    this.setState({swapTokens_tokenB_balance});\n\n\n    // Get ETH price in USD using chainlink price feed\n    const aggregatorV3InterfaceABI = [{ \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"description\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint80\", \"name\": \"_roundId\", \"type\": \"uint80\" }], \"name\": \"getRoundData\", \"outputs\": [{ \"internalType\": \"uint80\", \"name\": \"roundId\", \"type\": \"uint80\" }, { \"internalType\": \"int256\", \"name\": \"answer\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"startedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"updatedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint80\", \"name\": \"answeredInRound\", \"type\": \"uint80\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"latestRoundData\", \"outputs\": [{ \"internalType\": \"uint80\", \"name\": \"roundId\", \"type\": \"uint80\" }, { \"internalType\": \"int256\", \"name\": \"answer\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"startedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"updatedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint80\", \"name\": \"answeredInRound\", \"type\": \"uint80\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"version\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\n      \n    const eth_usd_rinkeby_proxy_address = \"0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\";\n    const priceFeed = new this.props.web3.eth.Contract(aggregatorV3InterfaceABI, eth_usd_rinkeby_proxy_address);\n    console.log(\"price feed = \",priceFeed);\n\n    let decimals = 0;\n    decimals = await priceFeed.methods.decimals().call();\n    let roundData = await priceFeed.methods.latestRoundData().call();\n    console.log(\"Latest Round Data\", roundData);\n    console.log(decimals);\n    console.log(roundData.answer);\n    console.log('1 ETH = ',(roundData.answer/(10**decimals)),' DOLLARS');\n    const eth_price = (roundData.answer/(10**decimals));\n    this.setState({eth_price});\n     \n\n\n  }\n\n  render() {\n    let eth_balance_div, tokenA_balance_div, tokenB_balance_div, swapTokens_eth_balance_div, swapTokens_tokenB_balance_div, swapTokens_tokenA_balance_div ;\n\n    if(this.state.eth_balance){\n        eth_balance_div = (<div id=\"acc\">ETH Balance = {this.props.web3.utils.fromWei((this.state.eth_balance).toString())}</div>);\n    }\n\n    if(this.state.tokenA_balance){\n        tokenA_balance_div = (<div id=\"acc\">TokenA Balance = {this.props.web3.utils.fromWei((this.state.tokenA_balance).toString())}</div>);\n    }\n\n    if(this.state.tokenB_balance){\n        tokenB_balance_div = (<div id=\"acc\">TokenB Balance = {this.props.web3.utils.fromWei((this.state.tokenB_balance).toString())}</div>);\n\n    }\n\n\n     if(this.state.swapTokens_eth_balance){\n        swapTokens_eth_balance_div = (<div id=\"swap_contract\">ETH Balance = {this.props.web3.utils.fromWei((this.state.swapTokens_eth_balance).toString())}</div>);\n    }\n\n    if(this.state.swapTokens_tokenA_balance){\n        swapTokens_tokenA_balance_div = (<div id=\"swap_contract\">TokenA Balance = {this.props.web3.utils.fromWei((this.state.swapTokens_tokenA_balance).toString())}</div>);\n    }\n\n    if(this.state.swapTokens_tokenB_balance){\n        swapTokens_tokenB_balance_div = (<div id=\"swap_contract\">TokenB Balance = {this.props.web3.utils.fromWei((this.state.swapTokens_tokenB_balance).toString())}</div>);\n\n    }\n\n\n    console.log(\"token_amount = \", this.state.token_amount);\n    console.log(\"eth_amount = \", this.state.eth_amount);\n    console.log(\"usd_amount = \", this.state.usd_amount);\n    console.log(\"selected_token = \", this.state.selected_token);\n    console.log(\"selected_rate = \", this.state.selected_rate);\n    \n   \n    return(\n      <div className=\"container\">\n            <div className=\"row\" >\n                <div className=\"col-md-4\">\n                    <div className=\"row \" style={{display:'block'}} id=\"window\">\n                        <div id=\"title\">Connected Account Details:</div>\n                        {eth_balance_div}\n                        {tokenA_balance_div}\n                        {tokenB_balance_div}\n\n                    </div>\n                    <div className=\"row \"  style={{display:'block'}} id=\"window\">\n                        <div  id=\"title\">SwapTokens Contract Details:</div>\n                        {swapTokens_eth_balance_div}\n                        {swapTokens_tokenA_balance_div}\n                        {swapTokens_tokenB_balance_div}\n\n                    </div>\n                </div>\n\n                <div className=\"col-md-2\" ></div>\n\n                <div className=\"col-md-5\" >\n                        <div className=\"row \" id=\"window\">\n                            <form onSubmit={this.handleSubmit}>   \n                                \n                                <div className=\"flex-container token_box\">\n                                        <input  type=\"text\" value={this.state.token_amount} onChange={this.handleChange1} className=\"form-control  flex-child token_amount\" placeholder=\"Token Amount\"/> \n                                        <select className=\"form-control  flex-child select_token\"  value={this.state.selected_token} onChange={this.handleSelect} >\n                                            <option value=\"A\">Token A</option>\n                                            <option value=\"B\">Token B</option>\n                                        </select>\n                                </div>\n                                <div  className=\"flex-container eth_box\">\n                                    <input  type=\"text\" value={this.state.eth_amount} onChange={this.handleChange2}  className=\"form-control flex-child eth_balance\" placeholder=\"ETH Amount\"/> \n                                    <div className=\"flex-child\">ETH</div>\n                                </div>\n                                <div  className=\"flex-container usd_box\">\n                                    <input  type=\"text\" value={this.state.usd_amount} onChange={this.handleChange3} className=\"form-control flex-child eth_balance\" placeholder=\"USD Amount\"/> \n                                    <div className=\"flex-child\">USD</div>\n                                </div>\n\n                                \n                                    <div className=\"flex-container\">\n                                        <input type=\"submit\" name=\"action1\" value=\"buy\" disabled={this.state.eth_amount === \"0\" || !this.state.eth_amount} className=\"btn btn-sm  flex-child\" id=\"buy_button\"\n                                            onClick={(e)=>this.setState({clicked_button:\"buy\"})} />\n                                        \n                                        <input type=\"submit\" name=\"action2\" value=\"sell\" disabled={this.state.eth_amount === \"0\" || !this.state.eth_amount}  className=\"btn btn-sm flex-child\" id=\"sell_button\"\n                                            onClick={(e)=>this.setState({clicked_button:\"sell\"})}  />\n                                        \n                                    </div>\n                            \n                            \n                            </form>\n\n                        </div>\n                        \n                       \n                </div>\n                <div className=\"col-md-1\"></div>\n           \n            </div>\n    </div>\n  );\n\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\n\nimport TokenA from \"./contracts/TokenA.json\";\nimport TokenB from \"./contracts/TokenB.json\";\nimport SwapTokens from \"./contracts/SwapTokens.json\";\n\n\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      web3: null, \n      connectedAccount: null, \n      oncorrectNetwork:false, \n      connectedNetworkID:null,\n  \n      tokenA_contract: null, \n      tokenB_contract:null, \n      swapTokens_contract:null,\n      swapContract_address:null\n      \n    };\n\n    this.connectWallet = this.connectWallet.bind(this);\n\n  \n\n  }\n  \n  componentDidMount = async () => {\n    try{\n      console.log(\"TLoading web3 and connected accounts\");\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      console.log(\"web3 = \", web3);\n      this.setState({web3});\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"accounts = \", accounts);\n      this.setState({connectedAccount: accounts[0]});\n\n      // Get the tokenA_contract instance.\n      const networkId = await this.state.web3.eth.net.getId();\n      console.log(\"networkId =\" , networkId);\n      this.setState({connectedNetworkID:networkId});\n\n      if(networkId === 4){\n        console.log(\"CORRECT NETWORK\");\n        this.setState({oncorrectNetwork:true});\n        // await this.connectWallet();\n      }else{\n        this.setState({oncorrectNetwork:false})\n     }\n\n\n    }catch(err){\n      alert(\n        `Failed to load web3, accounts, or tokenA_contract. Check console for details.`,\n      );\n      console.error(err);\n    }\n\n  };\n\n  connectWallet = async() => {\n    console.log(\"Hello from connectWallet Function\");\n    const networkId = await this.state.web3.eth.net.getId();\n    this.setState({connectedNetworkID:networkId});\n    console.log(\"Net ID = \", networkId);\n    if(networkId === 4){\n      this.setState({oncorrectNetwork:true});\n      try {\n        console.log(\"TRYING To Load Contracts\");\n        const deployedNetwork1 = TokenA.networks[networkId];\n        console.log(\"deployedNetwork1 = \", deployedNetwork1);\n\n        const instance1 = new this.state.web3.eth.Contract(\n          TokenA.abi,\n          deployedNetwork1 && deployedNetwork1.address,\n        );\n        console.log(\"tokenA_contract = \", instance1);\n\n        // Get TokenB Contract\n        const deployedNetwork2 = TokenB.networks[networkId];\n        console.log(\"deployedNetwork2 = \", deployedNetwork2);\n\n        const instance2 = new this.state.web3.eth.Contract(\n          TokenB.abi,\n          deployedNetwork2 && deployedNetwork2.address,\n        );\n        console.log(\"tokenB_contract = \", instance2);\n\n        // Get SwapTokens Contract\n        const deployedNetwork3 = SwapTokens.networks[networkId];\n        console.log(\"deployedNetwork3 = \", deployedNetwork3);\n        const swapContract_address = deployedNetwork3.address;\n        this.setState({swapContract_address});\n        const instance3 = new this.state.web3.eth.Contract(\n          SwapTokens.abi,\n          deployedNetwork3 && deployedNetwork3.address,\n        );\n        console.log(\"swapTokens_contract = \", instance3);\n\n        this.setState({ \n                        tokenA_contract: instance1, \n                        tokenB_contract:instance2, \n                        swapTokens_contract:instance3 \n                      });\n       \n  \n       \n  \n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load Contracts`,\n        );\n        console.error(error);\n      }\n\n    }else{\n      if(this.state.web3){\n        alert(\"Please switch to Rinkeby Testnet.\");     \n        \n      }\n      this.setState({oncorrectNetwork:false})\n      \n    }\n    \n  };\n\n\n  render() {\n    let content;\n    if (!this.state.web3) {\n      content =  (<div>Loading Web3, accounts, and contracts...</div>);\n    }else if (this.state.web3 && (!this.state.tokenA_contract)){\n      content =  (\n              \n                  <div className=\"App\">\n                    <p >Hi There! </p>\n                    <p>Please Connect To Rinkeby Testnet Then Connect Your Wallet To Start Buying/Selling Tokens</p>\n                    <button   type=\"button\" className=\"btn btn-outline-primary btn-lg\" \n                              onClick={async() => {await this.connectWallet();}}>\n                      Connect Your Wallet</button>\n                \n                  </div>\n             \n              \n                );\n      }else{\n          content =  (<div>\n                      <Navbar connectedAccount={this.state.connectedAccount}/>\n                      <Form\n                        web3={this.state.web3}\n                        connectedAccount={this.state.connectedAccount}\n                        tokenA_contract={this.state.tokenA_contract}\n                        tokenB_contract={this.state.tokenB_contract}\n                        swapTokens_contract={this.state.swapTokens_contract}\n                        swapContract_address={this.state.swapContract_address}\n                      />\n\n                    </div>\n                    );\n\n\n    }\n   \n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}